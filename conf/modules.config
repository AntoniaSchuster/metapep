/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/db_tables" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename.equals('samplesheet.valid.csv') ? "pipeline_info/$filename" : "db_tables/$filename" }
        ]
    }

    withName: UNPACK_BIN_ARCHIVES {
        publishDir = [
            enabled: false
        ]
    }

    withName: REMOVE_DUPLICATE_PEPTIDES {
        publishDir = [
            enabled: false
        ]
    }

    withName: SORT_PEPTIDES {
        publishDir = [
            enabled: false
        ]
    }

    withName: DOWNLOAD_PROTEINS {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename.endsWith(".tsv") ? null : "entrez_data/$filename" }
        ]
    }

    withName: PRODIGAL {
        publishDir = [
            path: { "${params.outdir}/prodigal" },
            mode: params.publish_dir_mode,
            pattern: '*.gff',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename}
        ]
        ext.prefix = { meta.bin_basename ? "${meta.id}.${meta.bin_basename}" : "${meta.id}" }
        ext.args = { "-p ${params.prodigal_mode}" }
    }

    withName: FRED2_GENERATEPEPTIDES {
        publishDir = [
            enabled: false
        ]
        ext.args = "--max_length ${params.max_pep_len} --min_length ${params.min_pep_len} "
        ext.suffix = { meta.bin_basename ? "${meta.bin_basename}.${raw.getBaseName().tokenize('.')[-1]}" :  raw.getBaseName().tokenize('.')[-1]}
    }

    withName: SPLIT_PEPTIDES {
        publishDir = [
            enabled: false
        ]
        ext.args = "--min_size ${params.peptides_split_minchunksize} --max_chunks ${params.peptides_split_maxchunks} "
    }

    withName: PEPTIDE_PREDICTION {
        publishDir = [
            path: { "${params.outdir}/predictions" },
            mode: 'copy'
        ]
        // Argument list needs to end with --peptides
        ext.args = "--tools ${params.pred_method} --mhcclass 1 --max_length ${params.max_pep_len} --min_length ${params.min_pep_len} --reference 'GRCh37' --peptides"
    }

    withName: MERGE_JSON_SINGLE {
        publishDir = [
            path: { "${params.outdir}/merged_predictions" },
            mode: 'copy'
        ]
        ext.args = " --single_input "
    }

    withName: MERGE_JSON_MULTI {
        publishDir = [
            path: { "${params.outdir}/merged_predictions" },
            mode: 'copy'
        ]
        ext.args = " --input \$PWD "
    }

    withName: CAT_TSV {
        publishDir = [
            path: { "${params.outdir}/merged_predictions" },
            mode: 'copy'
        ]
    }

    withName: CAT_FASTA {
        publishDir = [
            path: { "${params.outdir}/merged_predictions" },
            mode: 'copy'
        ]
    }

    withName: CSVTK_CONCAT {
        publishDir = [
            path: { "${params.outdir}/merged_predictions" },
            mode: 'copy'
        ]
    }

    withName: PLOT_SCORE_DISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/figures" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PLOT_ENTITY_BINDING_RATIOS {
        publishDir = [
            path: { "${params.outdir}/figures" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
