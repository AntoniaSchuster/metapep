/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/db_tables" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: UNPACK_BIN_ARCHIVES {
        publishDir = [
            enabled: false
        ]
    }

    withName: DOWNLOAD_PROTEINS {
        publishDir = [
            path: { "${params.outdir}" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename.endsWith(".tsv") ? null : "entrez_data/$filename" }
        ]
    }

    withName: PRODIGAL {
        publishDir = [
            path: { "${params.outdir}/prodigal" },
            mode: 'copy',
            pattern: '*.{gff,faa}',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename}
        ]
        ext.prefix = { meta.bin_basename ? "${meta.id}.${meta.bin_basename}" : "${meta.id}" }
        ext.args = { "-p ${params.prodigal_mode}" }
    }

    withName: FRED2_GENERATEPEPTIDES {
        publishDir = [
            enabled: false
        ]
        ext.args = "--max_length ${params.max_pep_len} --min_length ${params.min_pep_len} "
    }

    withName: SPLIT_PEPTIDES {
        publishDir = [
            enabled: false
        ]
        ext.args = "--min_size ${params.peptides_split_minchunksize} --max_chunks ${params.peptides_split_maxchunks} "
    }

    withName: CREATE_PROTEIN_TSV {
        publishDir = [
            path: { "${params.outdir}/prodigal" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SPLIT_PRED_TASKS {
        publishDir = [
            enabled: false
        ]
    }

    withName: PREDICT_EPITOPES {
        publishDir = [
            enabled: false
        ]
    }

    withName: MERGE_PREDICTIONS_BUFFER {
        publishDir = [
            enabled: false
        ]
    }

    withName:MERGE_PREDICTIONS {
        publishDir = [
            path: { "${params.outdir}" },
            mode: 'copy',
            saveAs: {filename -> filename.equals('versions.yml') ? null : filename.endsWith(".log") ? "logs/$filename" : "db_tables/$filename"}
        ]
    }

    withName: PREPARE_SCORE_DISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/figures/prediction_scores" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PLOT_SCORE_DISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/figures" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PREPARE_ENTITY_BINDING_RATIOS {
        publishDir = [
            path: { "${params.outdir}/figures/entity_binding_ratios" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: PLOT_ENTITY_BINDING_RATIOS {
        publishDir = [
            path: { "${params.outdir}/figures" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
